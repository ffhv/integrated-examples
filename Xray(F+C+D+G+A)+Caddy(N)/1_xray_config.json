{
  "log": {
    "loglevel": "warning",
    "error": "/var/log/xray/error.log",
    "access": "/var/log/xray/access.log"
  },
  "inbounds": [
    {
      "port": 443, //监听端口
      "protocol": "trojan",
      "settings": {
        "clients": [
          {
            "password":"diy443", //修改为自己密码
            "email": "443@gmail.com"
          }
        ],
        "fallbacks": [
          {
            "path": "/9ALdGZ9k", //通过路径分流
            "dest": 2007, //分流后转给Trojan+WebSocket监听端口
            "xver": 1 //开启PROXY protocol发送，发送真实来源IP和端口给如下Trojan+WebSocket应用。1或2表示PROXY protocol版本。
          },
          {
            "dest": 88, //h2与http/1.1回落端口（共用端口）
            "xver": 1 //开启PROXY protocol发送，发送真实来源IP和端口给Caddy。1或2表示PROXY protocol版本。
          }
        ]
      },
      "streamSettings": {
        "network": "tcp",
        "security": "tls",
        "tlsSettings": {
          "certificates": [
            {
              "ocspStapling": 3600,
              "certificateFile": "/home/tls/certificates/acme-v02.api.letsencrypt.org-directory/xx.yy/xx.yy.crt", //换成自己的证书，绝对路径。
              "keyFile": "/home/tls/certificates/acme-v02.api.letsencrypt.org-directory/xx.yy/xx.yy.key" //换成自己的密钥，绝对路径。
            }
          ],
          "minVersion": "1.2",
          "maxVersion": "1.2",
          "cipherSuites": "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256", //非AES算法的密码套件
          "alpn": [
            "h2", //启用h2连接需配置h2回落，否则不一致（裸奔）容易被墙探测出从而被封。
            "http/1.1" //启用http/1.1连接需配置http/1.1回落，否则不一致（裸奔）容易被墙探测出从而被封。
          ]
        }
      },
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    },
    {
      "listen": "127.0.0.1", //只监听本机，避免本机外的机器探测到下面端口。
      "port": 2007, //Trojan+WebSocket监听端口
      "protocol": "trojan",
      "settings": {
        "clients": [
          {
            "password":"diy2007", //修改为自己密码
            "email": "2007@gmail.com"
          }
        ]
      },
      "streamSettings": {
        "network": "ws",
        "security": "none",
        "wsSettings": {
          "acceptProxyProtocol": true, //开启PROXY protocol接收，接收Trojan+TCP+TLS分流前真实来源IP和端口。
          "path": "/9ALdGZ9k" //修改为自己的path
        }
      },
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    },
    {
      "listen": "127.0.0.1", //只监听本机，避免本机外的机器探测到下面端口。
      "port": 2005, //VLESS+H2C监听端口
      "protocol": "vless",
      "settings": {
        "clients": [
          {
            "id": "048e0bf2-dd56-11e9-aa37-5600024c1d6a", //修改为自己的UUID
            "email": "2005@gmail.com"
          }
        ],
        "decryption": "none"
      },
      "streamSettings": {
        "network": "h2",
        "security": "none",
        "httpSettings": {
          "path": "/SeuW56Es" //修改为自己的path
        }
      },
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    },
    {
      "listen": "127.0.0.1", //只监听本机，避免本机外的机器探测到下面端口。
      "port": 2011, //Shadowsocks+gRPC监听端口
      "protocol": "shadowsocks",
      "settings": {
        "method": "chacha20-poly1305",
        "password": "diy2011", //修改为自己的密码
        "email": "2011@gmail.com"
      },
      "streamSettings": {
        "network": "grpc",
        "security": "none",
        "grpcSettings": {
          "serviceName": "SALdGZ9k" //修改为自己的gRPC服务名称，类似于HTTP/2中的Path。
        }
      },
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    },
    {
      "port": 2052, //监听端口
      "protocol": "vless",
      "settings": {
        "clients": [
          {
            "id": "0a652466-dd56-11e9-aa37-5600024c1d6a", //修改为自己的UUID
            "email": "2052@gmail.com"
          }
        ],
        "decryption": "none"
      },
      "streamSettings": {
        "network": "kcp",
        "security": "none",
        "kcpSettings": {
          "uplinkCapacity": 100,
          "downlinkCapacity": 100,
          "congestion": true, //启用拥塞控制
          "seed": "60VoqhfjP79nBQyU" //修改为自己的seed密码
        }
      },
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    }
  ],
  "routing": {
    "rules": [
      {
        "type": "field",
        "protocol": [
          "bittorrent"
        ],
        "outboundTag": "blocked"
      }
    ]
  },
  "outbounds": [
    {
      "protocol": "freedom",
      "settings": {}
    },
    {
      "tag": "blocked",
      "protocol": "blackhole",
      "settings": {}
    }
  ]
}
//备注：
//1、本示例使用非AES算法的密码套件配置来避免被封。
//2、目前Cloudflare的CDN流量中转（基于WebSocket over TLS或基于gRPC over TLS）不支持非AES算法的密码套件通过。
